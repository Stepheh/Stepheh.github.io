{"version":3,"sources":["./src/app/shared/material.module.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/shared/services/rest-api.service.ts","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css', './shared/bootstrap.css']\n})\nexport class AppComponent {\n  title = 'angularmaterial';\n}\n","<!-- Toolbar -->\n<app-toolbar></app-toolbar>\n<app-main-page></app-main-page>\n\n","import { AppComponent } from './app.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from './shared/material.module';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { CardComponent } from './components/card/card.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolbarComponent,\n    CardComponent,\n    MainPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>Simple card</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-button color=\"primary\">\n        <mat-icon class=\"white-icon\">menu</mat-icon>\n    </button>\n    <a>Home</a>\n    <nav mat-tab-nav-bar>\n        <a mat-tab-link class=\"white-icon\">Manga</a>\n        <a mat-tab-link class=\"white-icon\">Light Novel</a>\n    </nav>\n</mat-toolbar>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\nimport { Series } from '../series';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestApiService {\n\n  //proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  wlnUpdatesApiURL = \"https://www.wlnupdates.com/api\";\n  getTranslatedSeriesJson = \"{ \\\"mode\\\": \\\"get-translated-series\\\" }\";\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Access-Control-Allow-Origin': '*',\n      // 'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS',\n      // 'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With'\n    })\n    //params: new HttpParams(getTranslatedSeriesJson)\n  }\n\n  getTranslatedSeries(): Observable<Series> {\n    //return this.http.get<Series>(this.wlnUpdatesApiURL,)\n    return this.http.post<Series>(this.wlnUpdatesApiURL, JSON.stringify(this.getTranslatedSeriesJson), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RestApiService } from '../../shared/services/rest-api.service';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css', '../../shared/bootstrap.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  series: any = [];\n\n  constructor(public restApi: RestApiService) { }\n\n  ngOnInit(): void {\n    this.retrieveTranslatedSeries();\n  }\n\n  retrieveTranslatedSeries() {\n    return this.restApi.getTranslatedSeries().subscribe((data: {}) => {\n      this.series = data;\n    })\n  }\n\n}\n","<main>\n    <mat-card class=\"main-card\">\n        <form>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <p class=\"h6\">Type</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <select class=\"form-control\">\n                        <option>Manga</option>\n                        <option>Light Novel</option>\n                    </select>\n                </div>\n            </div>\n            <br>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <p class=\"h6\">Series Name</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <select class=\"form-control\">\n                        <option *ngFor=\"let serie of series\" value={{serie}}>{{serie}}</option>\n                    </select>\n                </div>\n            </div>\n            <br>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <p class=\"h6\">Status</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <select class=\"form-control\">\n                        <option>Completed</option>\n                        <option>Dropped</option>\n                        <option>On-hold</option>\n                        <option>Plan to read</option>\n                        <option>Reading</option>\n                    </select>\n                </div>\n            </div>\n            <br>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <p class=\"h6\">Chapters seen</p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <input type=\"number\" class=\"form-control\" min=\"0\">\n                </div>\n            </div>\n            <br>\n            \n            <div class=\"row\">\n                <div class=\"col\">\n                    <button type=\"button\" class=\"btn btn-primary btn-block\">Submit</button>\n                </div>\n            </div>\n            <br>\n        </form>\n    </mat-card>\n</main>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}